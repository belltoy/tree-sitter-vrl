==========================
Error predicate
==========================

# result:
#
# error[E110]: fallible predicate
#   ┌─ :2:13
#   │
# 2 │ if contains(.noog, "thing") {
#   │             ^^^^^
#   │             │
#   │             this expression resolves to any
#   │             but the parameter "value" expects the exact type string
#   │
#   = try: ensuring an appropriate type at runtime
#   =
#   =     .noog = string!(.noog)
#   =     contains(.noog, "thing")
#   =
#   = try: coercing to an appropriate type and specifying a default value as a fallback in case coercion fails
#   =
#   =     .noog = to_string(.noog) ?? "default"
#   =     contains(.noog, "thing")
#   =
#   = see documentation about error handling at https://errors.vrl.dev/#handling
#   = learn more about error code 110 at https://errors.vrl.dev/110
#   = see language documentation at https://vrl.dev
#   = try your code in the VRL REPL, learn more at https://vrl.dev/examples

if contains(.noog, "thing") {
  log("ooh")
}

--------------------------

(program
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (comment)
  (if_statement
    condition: (predicate
      (term
        (function_call
          (ident)
          arguments: (argument
            (term
              (query
                (event)
                (path
                  field: (field)))))
          arguments: (argument
            (term
              (string))))))
    (block
      (term
        (function_call
          (ident)
          arguments: (argument
            (term
              (string))))))))
