==========================
Nested if
==========================

# result: ["1xx", "2xx", "3xx", "4xx", null]

status_code = 150
a1 = if status_code < 200 { "1xx" } else if status_code < 300 { "2xx" } else if status_code < 400 { "3xx" } else if status_code < 500 { "4xx" }

status_code = 250
a2 = if status_code < 200 { "1xx" } else if status_code < 300 { "2xx" } else if status_code < 400 { "3xx" } else if status_code < 500 { "4xx" }

status_code = 350
a3 = if status_code < 200 { "1xx" } else if status_code < 300 { "2xx" } else if status_code < 400 { "3xx" } else if status_code < 500 { "4xx" }

status_code = 450
a4 = if status_code < 200 { "1xx" } else if status_code < 300 { "2xx" } else if status_code < 400 { "3xx" } else if status_code < 500 { "4xx" }

status_code = 550
a5 = if status_code < 200 { "1xx" } else if status_code < 300 { "2xx" } else if status_code < 400 { "3xx" } else if status_code < 500 { "4xx" }

[a1, a2, a3, a4, a5]

--------------------------

(program
  (comment)
  (assignment
    left: (assign_target
      (ident))
    right: (term
      (integer)))
  (assignment
    left: (assign_target
      (ident))
    right: (if_statement
      condition: (predicate
        (binary_expression
          left: (term
            (ident))
          right: (term
            (integer))))
      (block
        (term
          (string)))
      condition: (predicate
        (binary_expression
          left: (term
            (ident))
          right: (term
            (integer))))
      (block
        (term
          (string)))
      condition: (predicate
        (binary_expression
          left: (term
            (ident))
          right: (term
            (integer))))
      (block
        (term
          (string)))
      condition: (predicate
        (binary_expression
          left: (term
            (ident))
          right: (term
            (integer))))
      (block
        (term
          (string)))))
  (assignment
    left: (assign_target
      (ident))
    right: (term
      (integer)))
  (assignment
    left: (assign_target
      (ident))
    right: (if_statement
      condition: (predicate
        (binary_expression
          left: (term
            (ident))
          right: (term
            (integer))))
      (block
        (term
          (string)))
      condition: (predicate
        (binary_expression
          left: (term
            (ident))
          right: (term
            (integer))))
      (block
        (term
          (string)))
      condition: (predicate
        (binary_expression
          left: (term
            (ident))
          right: (term
            (integer))))
      (block
        (term
          (string)))
      condition: (predicate
        (binary_expression
          left: (term
            (ident))
          right: (term
            (integer))))
      (block
        (term
          (string)))))
  (assignment
    left: (assign_target
      (ident))
    right: (term
      (integer)))
  (assignment
    left: (assign_target
      (ident))
    right: (if_statement
      condition: (predicate
        (binary_expression
          left: (term
            (ident))
          right: (term
            (integer))))
      (block
        (term
          (string)))
      condition: (predicate
        (binary_expression
          left: (term
            (ident))
          right: (term
            (integer))))
      (block
        (term
          (string)))
      condition: (predicate
        (binary_expression
          left: (term
            (ident))
          right: (term
            (integer))))
      (block
        (term
          (string)))
      condition: (predicate
        (binary_expression
          left: (term
            (ident))
          right: (term
            (integer))))
      (block
        (term
          (string)))))
  (assignment
    left: (assign_target
      (ident))
    right: (term
      (integer)))
  (assignment
    left: (assign_target
      (ident))
    right: (if_statement
      condition: (predicate
        (binary_expression
          left: (term
            (ident))
          right: (term
            (integer))))
      (block
        (term
          (string)))
      condition: (predicate
        (binary_expression
          left: (term
            (ident))
          right: (term
            (integer))))
      (block
        (term
          (string)))
      condition: (predicate
        (binary_expression
          left: (term
            (ident))
          right: (term
            (integer))))
      (block
        (term
          (string)))
      condition: (predicate
        (binary_expression
          left: (term
            (ident))
          right: (term
            (integer))))
      (block
        (term
          (string)))))
  (assignment
    left: (assign_target
      (ident))
    right: (term
      (integer)))
  (assignment
    left: (assign_target
      (ident))
    right: (if_statement
      condition: (predicate
        (binary_expression
          left: (term
            (ident))
          right: (term
            (integer))))
      (block
        (term
          (string)))
      condition: (predicate
        (binary_expression
          left: (term
            (ident))
          right: (term
            (integer))))
      (block
        (term
          (string)))
      condition: (predicate
        (binary_expression
          left: (term
            (ident))
          right: (term
            (integer))))
      (block
        (term
          (string)))
      condition: (predicate
        (binary_expression
          left: (term
            (ident))
          right: (term
            (integer))))
      (block
        (term
          (string)))))
  (term
    (array
      (term
        (ident))
      (term
        (ident))
      (term
        (ident))
      (term
        (ident))
      (term
        (ident)))))
