==========================
Multi-line predicates
==========================

# result: [true, true, true, true, true]

x = 2

v1 = if (x = x + 1; x == 3) {
  true
}

v2 = if (x = x + 1
         x == 4) {
  true
}

v3 = if (
  x = x + 1
  x == 5
) {
  true
}

v4 = if (
  # Lets test spaces
  x = x + 1

  # Does it work?

  x = x + 1; x == 7;

  ) {
  true
}

v5 = if (x = x + 1; x == 9) {
       null
     } else if (
       x = x + 1
       x == 9
     ) {
       true
     }

[v1, v2, v3, v4, v5]

--------------------------

(program
  (comment)
  (assignment
    left: (assign_target
      (ident))
    right: (integer))
  (assignment
    left: (assign_target
      (ident))
    right: (if_statement
      condition: (predicate
        (assignment
          left: (assign_target
            (ident))
          right: (binary_expression
            left: (ident)
            right: (integer)))
        (binary_expression
          left: (ident)
          right: (integer)))
      (block
        (boolean))))
  (assignment
    left: (assign_target
      (ident))
    right: (if_statement
      condition: (predicate
        (assignment
          left: (assign_target
            (ident))
          right: (binary_expression
            left: (ident)
            right: (integer)))
        (binary_expression
          left: (ident)
          right: (integer)))
      (block
        (boolean))))
  (assignment
    left: (assign_target
      (ident))
    right: (if_statement
      condition: (predicate
        (assignment
          left: (assign_target
            (ident))
          right: (binary_expression
            left: (ident)
            right: (integer)))
        (binary_expression
          left: (ident)
          right: (integer)))
      (block
        (boolean))))
  (assignment
    left: (assign_target
      (ident))
    right: (if_statement
      condition: (predicate
        (comment)
        (assignment
          left: (assign_target
            (ident))
          right: (binary_expression
            left: (ident)
            right: (integer)))
        (comment)
        (assignment
          left: (assign_target
            (ident))
          right: (binary_expression
            left: (ident)
            right: (integer)))
        (binary_expression
          left: (ident)
          right: (integer)))
      (block
        (boolean))))
  (assignment
    left: (assign_target
      (ident))
    right: (if_statement
      condition: (predicate
        (assignment
          left: (assign_target
            (ident))
          right: (binary_expression
            left: (ident)
            right: (integer)))
        (binary_expression
          left: (ident)
          right: (integer)))
      (block
        (null))
      condition: (predicate
        (assignment
          left: (assign_target
            (ident))
          right: (binary_expression
            left: (ident)
            right: (integer)))
        (binary_expression
          left: (ident)
          right: (integer)))
      (block
        (boolean))))
  (array
    (ident)
    (ident)
    (ident)
    (ident)
    (ident)))
