==========================
If local assignment
==========================

# result: true

a = 5
if false {
  a = "string"
}
assert!(a == 5)
assert!(type_def(a) == {"integer": true, "bytes": true})

a = 5
if true {
  a = "string"
}
assert!(a == "string")
assert!(type_def(a) == {"integer": true, "bytes": true})

--------------------------

(program
  (comment)
  (assignment
    left: (assign_target
      (ident))
    right: (integer))
  (if_statement
    condition: (predicate
      (boolean))
    (block
      (assignment
        left: (assign_target
          (ident))
        right: (string))))
  (function_call
    function_name: (ident)
    arguments: (argument
      (binary_expression
        left: (ident)
        right: (integer))))
  (function_call
    function_name: (ident)
    arguments: (argument
      (binary_expression
        left: (function_call
          function_name: (ident)
          arguments: (argument
            (ident)))
        right: (object
          (key
            (string))
          (value
            (boolean))
          (key
            (string))
          (value
            (boolean))))))
  (assignment
    left: (assign_target
      (ident))
    right: (integer))
  (if_statement
    condition: (predicate
      (boolean))
    (block
      (assignment
        left: (assign_target
          (ident))
        right: (string))))
  (function_call
    function_name: (ident)
    arguments: (argument
      (binary_expression
        left: (ident)
        right: (string))))
  (function_call
    function_name: (ident)
    arguments: (argument
      (binary_expression
        left: (function_call
          function_name: (ident)
          arguments: (argument
            (ident)))
        right: (object
          (key
            (string))
          (value
            (boolean))
          (key
            (string))
          (value
            (boolean)))))))
